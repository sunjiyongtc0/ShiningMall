<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>sjy.shining</groupId>
        <artifactId>shining-mall</artifactId>
        <version>1.0.0</version>
        <!--<relativePath>../pom.xml</relativePath>-->
    </parent>
        <artifactId>shining-web</artifactId>
        <packaging>war</packaging>
        <name>shining-web</name>
        <description>管理后台</description>

    <properties>
        <druid-version>1.0.28</druid-version>
        <kaptcha.version>0.0.9</kaptcha.version>
        <quartz.version>2.3.0</quartz.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>sjy.shining</groupId>
            <artifactId>shining-common</artifactId>
            <version>1.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>sjy.shining</groupId>
            <artifactId>shining-api</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>sjy.shining</groupId>
            <artifactId>shining-schedule</artifactId>
            <version>1.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>sjy.shining</groupId>
            <artifactId>shining-sys</artifactId>
            <version>1.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>sjy.shining</groupId>
            <artifactId>shining-shop</artifactId>
            <version>1.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 3、添加thymeleaf依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <!--指定依赖范围为provided，这样tomcat 相关的jar就不会打包到war里了； 如果是provided：打成war 之后tomcat相关jira也会达到war里面。-->
            <scope>provided</scope>
        </dependency>
<!--添加servlet-api的依赖,用来打war包   sun test -->
<dependency>
  <groupId>javax.servlet</groupId>
  <artifactId>javax.servlet-api</artifactId>
  <scope>provided</scope>
</dependency>
        <dependency>
            <groupId>com.github.axet</groupId>
            <artifactId>kaptcha</artifactId>
            <version>${kaptcha.version}</version>
        </dependency>


        <!--SpringBoot2.0配置Swagger2-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.8.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.8.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.14</version>
        </dependency>
    </dependencies>

    <!--spring boot打包的话需要指定一个唯一的入门-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- 指定该Main Class为全局的唯一入口 -->
                    <mainClass>com.sjy.shining.WebApplication</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
<!--   打包命令 mvn clean package  -Dmaven.test.skip=true  -->

</project>